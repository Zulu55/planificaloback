// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Planificalo.Backend.Data;

#nullable disable

namespace Planificalo.Backend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240928160534_NewSeed")]
    partial class NewSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Planificalo.Shared.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 9, 28, 11, 5, 33, 454, DateTimeKind.Local).AddTicks(8243),
                            EventTypeId = 1,
                            Image = "image1.jpg",
                            Location = "Location One",
                            Title = "Event One",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 9, 29, 11, 5, 33, 454, DateTimeKind.Local).AddTicks(8247),
                            EventTypeId = 2,
                            Image = "image2.jpg",
                            Location = "Location Two",
                            Title = "Event Two",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Conference"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Workshop"
                        });
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GuestStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "guestone@example.com",
                            GuestStatus = true,
                            Name = "Guest One"
                        },
                        new
                        {
                            Id = 2,
                            Email = "guesttwo@example.com",
                            GuestStatus = false,
                            Name = "Guest Two"
                        });
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.GuestEvent", b =>
                {
                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.HasKey("EventId", "GuestId");

                    b.ToTable("GuestEvents");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            GuestId = 1
                        },
                        new
                        {
                            EventId = 2,
                            GuestId = 2
                        });
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.Invitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<bool>("InvitationStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Invitations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventId = 1,
                            GuestId = 1,
                            InvitationStatus = true,
                            SendDate = new DateTime(2024, 9, 28, 11, 5, 33, 454, DateTimeKind.Local).AddTicks(8651)
                        },
                        new
                        {
                            Id = 2,
                            EventId = 2,
                            GuestId = 2,
                            InvitationStatus = false,
                            SendDate = new DateTime(2024, 9, 29, 11, 5, 33, 454, DateTimeKind.Local).AddTicks(8681)
                        });
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100,
                            Description = "Plastic Chair",
                            Price = 10.00m,
                            ProductType = "Chair"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 50,
                            Description = "Wooden Table",
                            Price = 20.00m,
                            ProductType = "Table"
                        });
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.ProductProvider", b =>
                {
                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ProviderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductProviders");

                    b.HasData(
                        new
                        {
                            ProviderId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            ProviderId = 2,
                            ProductId = 2
                        });
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.ProductQuote", b =>
                {
                    b.Property<int>("QuoteId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("QuoteId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductQuotes");

                    b.HasData(
                        new
                        {
                            QuoteId = 1,
                            ProductId = 1,
                            Amount = 10,
                            UnitPrice = 0m
                        },
                        new
                        {
                            QuoteId = 2,
                            ProductId = 2,
                            Amount = 5,
                            UnitPrice = 0m
                        });
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("IdentityDocument")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsNaturalPerson")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentType", "IdentityDocument")
                        .IsUnique();

                    b.ToTable("Providers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Address One",
                            City = "City One",
                            ContactPhone = "1234567890",
                            Country = "Country One",
                            Department = "Department One",
                            DocumentType = "Cedula",
                            Email = "providerone@example.com",
                            IdentityDocument = 123456789L,
                            IsNaturalPerson = true,
                            Name = "Provider One",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Address Two",
                            City = "City Two",
                            ContactPhone = "0987654321",
                            Country = "Country Two",
                            Department = "Department Two",
                            DocumentType = "Cedula",
                            Email = "providertwo@example.com",
                            IdentityDocument = 987654321L,
                            IsNaturalPerson = false,
                            Name = "Provider Two",
                            Status = "Inactive"
                        });
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("QuoteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuoteStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ResponseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Quotes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventId = 1,
                            Notes = "Initial quote for Event One",
                            ProviderId = 1,
                            Quantity = 10,
                            QuoteDate = new DateTime(2024, 9, 28, 11, 5, 33, 454, DateTimeKind.Local).AddTicks(8451),
                            QuoteStatus = "Pending",
                            Total = 1000.00m
                        },
                        new
                        {
                            Id = 2,
                            EventId = 2,
                            Notes = "Initial quote for Event Two",
                            ProviderId = 2,
                            Quantity = 5,
                            QuoteDate = new DateTime(2024, 9, 28, 11, 5, 33, 454, DateTimeKind.Local).AddTicks(8456),
                            QuoteStatus = "Confirmed",
                            Total = 500.00m
                        });
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.Revocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Revocations");
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Catering Service",
                            Price = 100.00m,
                            Quantity = "10",
                            ServiceType = "Catering"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Photography Service",
                            Price = 200.00m,
                            Quantity = "5",
                            ServiceType = "Photography"
                        });
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.ServiceProvider", b =>
                {
                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("ProviderId", "ServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceProviders");

                    b.HasData(
                        new
                        {
                            ProviderId = 1,
                            ServiceId = 1
                        },
                        new
                        {
                            ProviderId = 2,
                            ServiceId = 2
                        });
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.ServiceQuote", b =>
                {
                    b.Property<int>("QuoteId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("QuoteId", "ServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceQuotes");

                    b.HasData(
                        new
                        {
                            QuoteId = 1,
                            ServiceId = 1,
                            Quantity = 10,
                            UnitPrice = 0m
                        },
                        new
                        {
                            QuoteId = 2,
                            ServiceId = 2,
                            Quantity = 5,
                            UnitPrice = 0m
                        });
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AccountCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("IdentityDocument")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentType", "IdentityDocument")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountCreationDate = new DateTime(2024, 9, 28, 11, 5, 33, 454, DateTimeKind.Local).AddTicks(8108),
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentType = "Cedula",
                            Email = "johndoe@example.com",
                            IdentityDocument = 123456789L,
                            Name = "John Doe",
                            Phone = "1234567890",
                            UserStatus = "Active"
                        },
                        new
                        {
                            Id = 2,
                            AccountCreationDate = new DateTime(2024, 9, 28, 11, 5, 33, 454, DateTimeKind.Local).AddTicks(8126),
                            BirthDate = new DateTime(1992, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentType = "Cedula",
                            Email = "janesmith@example.com",
                            IdentityDocument = 987654321L,
                            Name = "Jane Smith",
                            Phone = "0987654321",
                            UserStatus = "Inactive"
                        });
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.Administrator", b =>
                {
                    b.HasBaseType("Planificalo.Shared.Entities.User");

                    b.HasDiscriminator().HasValue("Administrator");
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.ProductProvider", b =>
                {
                    b.HasOne("Planificalo.Shared.Entities.Product", "Product")
                        .WithMany("ProductProvider")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Planificalo.Shared.Entities.Provider", "Provider")
                        .WithMany("ProductProviders")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.ProductQuote", b =>
                {
                    b.HasOne("Planificalo.Shared.Entities.Product", "Product")
                        .WithMany("ProductQuote")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Planificalo.Shared.Entities.Quote", "Quote")
                        .WithMany("ProductQuotes")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.Quote", b =>
                {
                    b.HasOne("Planificalo.Shared.Entities.Event", "Event")
                        .WithMany("Quotes")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Planificalo.Shared.Entities.Provider", "Provider")
                        .WithMany("Quotes")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.ServiceProvider", b =>
                {
                    b.HasOne("Planificalo.Shared.Entities.Provider", "Provider")
                        .WithMany("ServiceProviders")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Planificalo.Shared.Entities.Service", "Service")
                        .WithMany("ServiceProviders")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Provider");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.ServiceQuote", b =>
                {
                    b.HasOne("Planificalo.Shared.Entities.Quote", "Quote")
                        .WithMany("ServiceQuotes")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Planificalo.Shared.Entities.Service", "Service")
                        .WithMany("ServiceQuotes")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Quote");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.Event", b =>
                {
                    b.Navigation("Quotes");
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.Product", b =>
                {
                    b.Navigation("ProductProvider");

                    b.Navigation("ProductQuote");
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.Provider", b =>
                {
                    b.Navigation("ProductProviders");

                    b.Navigation("Quotes");

                    b.Navigation("ServiceProviders");
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.Quote", b =>
                {
                    b.Navigation("ProductQuotes");

                    b.Navigation("ServiceQuotes");
                });

            modelBuilder.Entity("Planificalo.Shared.Entities.Service", b =>
                {
                    b.Navigation("ServiceProviders");

                    b.Navigation("ServiceQuotes");
                });
#pragma warning restore 612, 618
        }
    }
}
